plex_api:
  header_identifier: "media-scripts"
  timeout: 360
  auth_server:
    base_url: 'YOUR_PLEX_URL'
    token: 'YOUR_PLEX_TOKEN'
  log:
    backup_count: 3
    format: "%(asctime)s %(module)12s:%(lineno)-4s %(levelname)-9s %(message)s"
    level: "INFO"
    path: "plexapi.log"
    rotate_bytes: 512000
    show_secrets: 0
  skip_verify_ssl: 0

general:
  tmdb_key: "TMDB_API_KEY" # https://developers.themoviedb.org/3/getting-started/introduction
  tvdb_key: "TVDB_V4_API_KEY" # currently not used; https://thetvdb.com/api-information
  delay: 1 # optional delay between items
  library_names: Movies,TV Shows,Movies 4K # comma-separated list of libraries to act on
  superchat: 0

kometa:
  config_dir: /kometa/is/here

image_download:
  what_to_grab:
    ### collection-related
    include_collection_artwork: 1 # should get-all-posters retrieve collection posters?
    only_collection_artwork: 0 # should get-all-posters retrieve ONLY collection posters?
    only_these_collections: "Bing|Bang|Boing" # only grab artwork for these collections and items in them

    ### tv-related
    seasons: 1 # should get-all-posters retrieve season posters?
    episodes: 1 # should get-all-posters retrieve episode posters? [requires GRAB_SEASONS]

    ### background-related
    backgrounds: 1 # should get-all-posters retrieve backgrounds?
    artwork: 1 # current background is downloaded with current poster

    ### quantity-related
    only_current: 0 # should get-all-posters retrieve ONLY current artwork?
    poster_depth: 20 # grab this many posters [0 grabs all] [ONLY_CURRENT overrides this]

    ### what-to-keep
    keep_junk: 0 # keep files that script would normally delete [incorrect filetypes, mainly]
    find_overlaid_images: 0 # check all downloaded images for overlays
    retain_overlaid_images: 0 # keep images that have an overlay EXIF tag [this will override the following two]
    retain_kometa_overlaid_images: 0 # keep images that have the Kometa overlay EXIF tag
    retain_tcm_overlaid_images: 0 # keep images that have the TCM overlay EXIF tag

  ## where-to-put-it
  where_to_put_it:
    use_asset_naming: 1 # should grab-all-posters name images to match Kometa's Asset Directory requirements?
    use_asset_folders: 1 # should those Kometa-Asset-Directory names use asset folders?
    use_asset_subfolders: 0 # create asset folders in subfolders ["Collections", "Other", or [0-9, A-Z]] ]
    assets_by_libraries: 1 # should those Kometa-Asset-Directory images be sorted into library folders?
    asset_dir: "assets" # top-level directory for those Kometa-Asset-Directory images
    # if asset-directory naming is on, the next three are ignored
    poster_dir: "extracted_posters" # put downloaded posters here
    current_poster_dir: "current_posters" # put downloaded current posters and artwork here
    poster_consolidate: 0 # if false, posters are separated into folders by library

  ## tracking
  tracking:
    track_urls: 1 # If set to 1, URLS are tracked and won't be downloaded twice
    track_completion: 1 # If set to 1, movies/shows are tracked as complete by rating id
    track_image_sources: 1 # keep a file containing file names and source URLs

  ## general
  general:
    poster_download: 1 # if false, generate a script rather than downloading
    folders_only: 0 # Just build out the folder hierarchy; no image downloading
    default_years_back: 2 # in absence of a "last run date", grab things added this many years back.
    # 0 sets the fallback date to the beginning of time
    threaded_downloads: 0 # should downloads be done in the background in threads?
    reset_libraries: "Bing,Bang,Boing" # reset "last time" count to the fallback date for these libraries
    reset_collections: "Bing,Bang,Boing" # CURRENTLY UNUSED
    add_source_exif_comment: 1 # CURRENTLY UNUSED

status:
  plex_owner: "yournamehere" # account name of the server owner
  target_plex_url: "https://plex.domain2.tld" # As above, the target of apply_all_status
  target_plex_token: "PLEX-TOKEN-TWO" # As above, the target of apply_all_status
  target_plex_owner: "yournamehere" # As above, the target of apply_all_status
  library_map: '{"LIBRARY_ON_PLEX":"LIBRARY_ON_TARGET_PLEX", ...}'
  # In apply_all_status, map libraries according to this JSON.

reset_posters:
  track_reset_status: 1 # should reset-posters-* keep track of status and pick up where it left off?
  clear_reset_status: 0
  local_reset_archive: 1 # should reset-posters-tmdb keep a local archive of posters?
  override_overlay_status: 0
  target_labels: this label, that label # comma-separated list of labels to reset posters on
  remove_labels: 0 # attempt to remove the TARGET_LABELs from items after resetting the poster
  reset_seasons: 1 # reset-posters-* resets season artwork as well in TV libraries
  reset_episodes: 1 # reset-posters-* resets episode artwork as well in TV libraries [requires RESET_SEASONS=True]
  retain_reset_status_file: 0 # Don't delete the reset progress file at the end
  flush_status_at_start: 0 # Delete the reset progress file at the start instead of reading it
  reset_seasons_with_series: 0 # If there isn't a season poster, use the series poster
  dry_run: 0 # [currently only works with reset-posters-*]; don't actually do anything, just log

# # LIST ITEM IDS ENV VARS
# INCLUDE_COLLECTION_MEMBERS=0
# ONLY_COLLECTION_MEMBERS=0
list_item_ids:
  include_collection_members: 0
  only_collection_members: 0

delete_collection:
  keep_collections: "bing,bang" # List of collections to keep

refresh_metadata:
  refresh_1970_only: 1 # If 1, only refresh things that have an originally-available date of 1970-01-01

rematch_items:
  unmatched_only: 1 # If 1, only rematch things that are currently unmatched

reset_added_at:
  adjust_date_futures_only: 0 # Only look at items that show up as added in the future
  adjust_date_epoch_only: 1 # Only adjust items that have "originally available" dates of `1970-01-01`

actor:
  cast_depth: 20 # how deep to go into the cast for actor collections
  top_count: 10 # how many actors to export
  job_type: "Actor"
  known_for_only: 0 # ignore cast members who are not primarily known as actors
  build_collections: 0 # build yaml for Kometa config.yml
  num_collections: 20 # this many actors in Kometa yaml
  track_gender: 1 # Pay attention to actor gender [as recorded on TMDB]
  min_gender_none: 5 # include minimum this many "none" gendered actors in the YAML, if possible
  min_gender_female: 5 # include minimum this many "female" gendered actors in the YAML, if possible
  min_gender_male: 5 # include minimum this many "male" gendered actors in the YAML, if possible
  min_gender_nb: 5 # include minimum this many "non-binary" gendered actors in the YAML, if possible

low_poster_count:
  poster_threshold: 10 # how many posters counts as a "low" count?

crew:
  depth: 20
  count: 100
  target_job: Director
  show_jobs: 0
